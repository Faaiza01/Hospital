@model Hospital.Data.PrescribeDto

@{
    ViewBag.Title = "Prescribe";
}


<style>
    .form {
        background-color: #8e2bbb;
        border-radius: 20px;
        box-sizing: border-box;
        height: 620px;
        padding: 20px;
        width: 650px;
        margin: auto;
        margin-top: 4rem;
    }

    .title {
        color: #eee;
        font-family: sans-serif;
        font-size: 36px;
        font-weight: 600;
        margin-top: 30px;
    }

    .subtitle {
        color: #eee;
        font-family: sans-serif;
        font-size: 16px;
        font-weight: 600;
        margin-top: 10px;
    }

    .input-container {
        height: 50px;
        position: relative;
        width: 100%;
    }

    .ic1 {
        margin-top: 40px;
    }

    .ic2 {
        margin-top: 30px;
    }

    .input {
        background-color: #8a50d3;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
        width: 100%;
    }

    .cut {
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 76px;
    }

    .cutConfirm {
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 120px;
    }

    .cut-short {
        width: 50px;
    }

    .input:focus ~ .cut,
    .input:not(:placeholder-shown) ~ .cut {
        transform: translateY(8px);
    }

    .input:focus ~ .cutConfirm,
    .input:not(:placeholder-shown) ~ .cutConfirm {
        transform: translateY(8px);
    }

    .placeholder {
        color: #f5f5f7;
        font-family: sans-serif;
        left: 20px;
        line-height: 14px;
        pointer-events: none;
        position: absolute;
        transform-origin: 0 50%;
        transition: transform 200ms, color 200ms;
        top: 20px;
    }

    .input:focus ~ .placeholder,
    .input:not(:placeholder-shown) ~ .placeholder {
        transform: translateY(-30px) translateX(10px) scale(0.75);
    }

    .input:not(:placeholder-shown) ~ .placeholder {
        color: #fcfcff;
    }

    .input:focus ~ .placeholder {
        color: #dc2f55;
    }

    .submit {
        background-color: #dd7ce7;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        cursor: pointer;
        font-size: 18px;
        height: 50px;
        margin-top: 38px;
        // outline: 0;
        text-align: center;
        width: 100%;
    }

    .role_select {
        width: 100%;
        height: 50px;
        background-color: #303245;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
    }

    .submit:active {
        background-color: #06b;
    }

    .marginTop {
        margin-top: 30px
    }

    .flex {
        display: flex;
        align-items: end;
    }

    .textAlign {
        text-align: center;
    }
</style>
<h2 class="marginTop">Prescribe</h2>
<hr class="line">
@using (Html.BeginForm("Prescribe", "Doctor", FormMethod.Post))
{
    <div class="form">
        @Html.AntiForgeryToken()

        <div class="subtitle">Prescribe here!</div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="flex">
            <div class="input-container ic1">
                @Html.TextBoxFor(m => m.Symptoms, new { @class = "input" })

                <div class="cut"></div>
                @Html.LabelFor(m => m.Symptoms, new { @class = "placeholder" })
            </div>

            <div class="input-container ic2">
                @Html.TextBoxFor(m => m.Diseases, new { @class = "input" })

                <div class="cutConfirm"></div>
                @Html.LabelFor(m => m.Diseases, new { @class = "placeholder" })

            </div>
        </div>
        <div class="flex">
            <div class="input-container ic2">

                @Html.TextBoxFor(m => m.Allergies, new { @class = "input" })

                <div class="cutConfirm"></div>
                @Html.LabelFor(m => m.Allergies, new { @class = "placeholder" })

            </div>
            <div class="input-container ic2">
                @Html.TextBoxFor(m => m.Prescription, new { @class = "input" })
                <div class="cutConfirm"></div>
                @Html.LabelFor(m => m.Prescription, new { @class = "placeholder" })
            </div>
        </div>
    
        <div class="textAlign">
            <input type="submit" value="Prescribe " class="submit" />

        </div>
    </div>
}
