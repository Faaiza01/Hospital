@model Hospital.Data.BookAppointmentDto

<h2></h2>

<style>
    .form {
        background-color: #15172b;
        border-radius: 20px;
        box-sizing: border-box;
        height: 620px;
        padding: 20px;
        width: 650px;
        margin: auto;
        margin-top: 4rem;
    }

    .title {
        color: #eee;
        font-family: sans-serif;
        font-size: 36px;
        font-weight: 600;
        margin-top: 30px;
    }

    .subtitle {
        color: #eee;
        font-family: sans-serif;
        font-size: 16px;
        font-weight: 600;
        margin-top: 10px;
    }

    .input-container {
        height: 50px;
        position: relative;
        width: 100%;
    }

    .ic1 {
        margin-top: 40px;
    }

    .ic2 {
        margin-top: 30px;
    }

    .input {
        background-color: #303245;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
        width: 100%;
    }

    .cut {
        background-color: #15172b;
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 76px;
    }

    .cutConfirm {
        background-color: #15172b;
        border-radius: 10px;
        height: 20px;
        left: 20px;
        position: absolute;
        top: -20px;
        transform: translateY(0);
        transition: transform 200ms;
        width: 120px;
    }

    .cut-short {
        width: 50px;
    }

    .input:focus ~ .cut,
    .input:not(:placeholder-shown) ~ .cut {
        transform: translateY(8px);
    }

    .input:focus ~ .cutConfirm,
    .input:not(:placeholder-shown) ~ .cutConfirm {
        transform: translateY(8px);
    }

    .placeholder {
        color: #65657b;
        font-family: sans-serif;
        left: 20px;
        line-height: 14px;
        pointer-events: none;
        position: absolute;
        transform-origin: 0 50%;
        transition: transform 200ms, color 200ms;
        top: 20px;
    }

    .input:focus ~ .placeholder,
    .input:not(:placeholder-shown) ~ .placeholder {
        transform: translateY(-30px) translateX(10px) scale(0.75);
    }

    .input:not(:placeholder-shown) ~ .placeholder {
        color: #808097;
    }

    .input:focus ~ .placeholder {
        color: #dc2f55;
    }

    .submit {
        background-color: #08d;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        cursor: pointer;
        font-size: 18px;
        height: 50px;
        margin-top: 38px;
        // outline: 0;
        text-align: center;
        width: 100%;
    }

    .role_select {
        width: 100%;
        height: 50px;
        background-color: #303245;
        border-radius: 12px;
        border: 0;
        box-sizing: border-box;
        color: #eee;
        font-size: 18px;
        height: 100%;
        outline: 0;
        padding: 4px 20px 0;
    }

    .submit:active {
        background-color: #06b;
    }

    .marginTop {
        margin-top: 10px
    }

    .flex {
        display: flex;
        align-items: end;
    }

    .textAlign {
        text-align: center;
    }
</style>

@using (Html.BeginForm("BookAppointment", "Patient", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form">
        @Html.AntiForgeryToken()
        <div class="subtitle">Book Appointment</div>
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="flex">

            <div class="input-container ic2">
                @Html.DropDownListFor( model => model.Department
                        , new List<SelectListItem>
        {
        new SelectListItem{ Text="Gynecologist", Value = "Gynecologist" },
        new SelectListItem{ Text="Oncologist", Value = "Oncologist" },
        new SelectListItem{ Text="Cardiologist", Value = "Cardiologist" },
        new SelectListItem{ Text="Gastroenterologist", Value = "Gastroenterologist" },
        new SelectListItem{ Text="Nueorologist", Value = "Nueorologist" },
        new SelectListItem{ Text="Perdiatrician", Value = "Perdiatrician" },
        },
                        "Select Specialization",
                        new { @id = "DropDown", @class = "input", onchange = "return get_sbu(this)" })

            </div>
            <div class="input-container ic1">
                @Html.DropDownListFor(model => model.Doctor
                         , (IEnumerable
        <SelectListItem>)ViewData["DoctorsData"],
                         "Select Doctor",
                         new { @id = "DoctorDropDown", @class = "input", onchange = "return get_fee(this)" })

            </div>

            @*<div class="input-container ic2">
                    @Html.TextBoxFor(m => m.LastName, new { @class = "input" })

                    <div class="cut"></div>
                    @Html.LabelFor(m => m.LastName, new { @class = "placeholder" })

                </div>*@
        </div>
        <div class="flex">
            @*<div class="input-container ic2">

                        @Html.TextBoxFor(m => m.Email, new { @class = "input" })

                        <div class="cut"></div>
                        @Html.LabelFor(m => m.Email, new { @class = "placeholder" })

                    </div>

                </div>
                <div class="flex">
                    @*<div class="input-container ic2">
                        @Html.PasswordFor(m => m.Password, new { @class = "input" })
                        <div class="cut"></div>
                        @Html.LabelFor(m => m.Password, new { @class = "placeholder" })
                    </div>
                    <div class="input-container ic2">
                        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "input" })
                        <div class="cutConfirm"></div>
                        @Html.LabelFor(m => m.ConfirmPassword, new { @class = "placeholder" })
                    </div>*@
        </div>

        <div class="flex">

            @*<div class="input-container ic2">
                    <select class="role_select" asp-for="@Html.EditorFor(model => model.Gender)">
                        @Html.LabelFor(m => m.Gender, new { @class = "placeholder" })
                        <option value="">Select Gender</option>
                        <option value="Male">Male</option>
                        <option value="Female">Female</option>
                    </select>

                </div>*@

        </div>

        <div class="flex">
            <div class="input-container ic1">
                @Html.TextBoxFor(m => m.ConsultancyFee, new { @class = "input", @id = "fee", @readonly = true })

                <div class="cut"></div>
                @*<input type="text" id="fee" name="GrpHead" value="AutoGenerated" readonly class="PO_GH" />*@

                @Html.LabelFor(m => m.ConsultancyFee, new { @class = "placeholder", @id = "fee" })
            </div>

            <div class="input-container ic1">
                @Html.TextBoxFor(m => m.AppointmentDateTime, new { @class = "input date", Value = DateTime.Now  })

                <div class="cut"></div>
                @Html.LabelFor(m => m.AppointmentDateTime, new { @class = "placeholder" })
            </div>



        </div>
        <div class="textAlign">
            <input type="submit" value="Book Appointment" class="submit" />

        </div>
    </div>
  
}
<script type="text/javascript">
        $('#@ViewData.TemplateInfo.GetFullHtmlFieldName(string.Empty)').datetimepicker();
</script>
<script>
    $(document).ready(function () {
        $(".datepicker").datepicker({
            dateFormat: "dd-mm-yy",
            changemonth: true,
            changeyear: true
        });
    });

    function get_sbu()
    {
        var selected_val = $('#DropDown').find(":selected").attr('value');
        //var selected_val = $('#DropDown').val();

       $.ajax({ //ajax call
        type:"POST",     //method == POST
           url:"/Patient/Index",//url to be called
        data:"id=" + selected_val,//data to be send
        success:function(data){
            $('#GrpHead').val(data);// here we will set a value of text box
           }
        });
    }


    function get_fee() {
        var selected_val = $('#DoctorDropDown').find(":selected").attr('value');
        //var selected_val = $('#DropDown').val();

        $.ajax({ //ajax call
            type: "POST",     //method == POST
            url: "/Patient/GetFee",//url to be called
            data: "id=" + selected_val,//data to be send
            success: function (data) {
                $('#fee').val(data);// here we will set a value of text box
            }
        });
    }

</script>
@section Scripts {  
    @Scripts.Render("~/bundles/jqueryval")
}
